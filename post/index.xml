<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on hicker-kin blog</title>
    <link>https://hicker-kin.github.io/post/</link>
    <description>Recent content in Posts on hicker-kin blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://hicker-kin.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>golang cache</title>
      <link>https://hicker-kin.github.io/post/api-cache/</link>
      <pubDate>Fri, 28 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://hicker-kin.github.io/post/api-cache/</guid>
      <description>&lt;p&gt;对于请求量频繁、更新频率不高的热点数据，&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>golang stack</title>
      <link>https://hicker-kin.github.io/post/stack/</link>
      <pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://hicker-kin.github.io/post/stack/</guid>
      <description>实现一个简单的栈:
package main import ( &amp;#34;fmt&amp;#34; &amp;#34;testing&amp;#34; ) type Stack []int func (s *Stack) Push(val int) { *s = append(*s, val) } func (s *Stack) Pop() int { if len(*s) == 0 { return -1 } val := (*s)[len(*s)-1] *s = (*s)[:len(*s)-1] return val } func (s *Stack) Peek() int { if len(*s) == 0 { return -1 } return (*s)[len(*s)-1] } func (s *Stack) IsEmpty() bool { return len(*s) == 0 } func TestStack(t *testing.</description>
    </item>
    
    <item>
      <title>defer VS return</title>
      <link>https://hicker-kin.github.io/post/defer/</link>
      <pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://hicker-kin.github.io/post/defer/</guid>
      <description>&lt;p&gt;defer和return到底谁先执行：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>队列实现</title>
      <link>https://hicker-kin.github.io/post/queue/</link>
      <pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://hicker-kin.github.io/post/queue/</guid>
      <description>&lt;p&gt;本文主要实现自定义的几种队列，代码实现如下：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gin Http Proxy</title>
      <link>https://hicker-kin.github.io/post/gin-proxy/</link>
      <pubDate>Thu, 02 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://hicker-kin.github.io/post/gin-proxy/</guid>
      <description>&lt;p&gt;本文是使用httputils库做的反向代理，代码实现如下：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go Http Proxy</title>
      <link>https://hicker-kin.github.io/post/http-proxy/</link>
      <pubDate>Thu, 02 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://hicker-kin.github.io/post/http-proxy/</guid>
      <description>&lt;p&gt;本文是使用httputils库做的反向代理，代码实现如下:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Welcome to my blog</title>
      <link>https://hicker-kin.github.io/post/welcome/</link>
      <pubDate>Mon, 30 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://hicker-kin.github.io/post/welcome/</guid>
      <description></description>
    </item>
    
    <item>
      <title>日本語テスト</title>
      <link>https://hicker-kin.github.io/post/japanese-test/</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://hicker-kin.github.io/post/japanese-test/</guid>
      <description>&lt;p&gt;This is a Japanese test post to show you how japanese is displayed.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
